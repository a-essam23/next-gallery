openapi: 3.0.0
info:
  version: 1.0.1
  title: TESTING this shit
  description: "An API that allows users to obtain CRUDDSAD operations on a new group "
  termsOfService: noneedrightnow
  contact:
    name: A&A organization.
    url: organization-website
    email: organization@gmail.com
  license:
    name: A&A license

servers:
  # Added by API Auto Mocking Plugin
  # - description: SwaggerHub API Auto Mocking
  #   url: https://virtserver.swaggerhub.com/FAILASOF_1/TestAPI/1.0.1
  - url: "http://127.0.0.1:5000/api/v1/"

  - url: http://prod.com
    description: Production server

paths:
  /admin/login:
    post:
      description: login in the user account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: a7dfh42948a7fhxy287392817
                password:
                  type: string

      responses:
        201:
          description: login successful
        401:
          description: incorrect email or password

  /group:
    get:
      description: Get all the groups

      responses:
        200:
          description: Successful pull of groups info.
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: string
                      example: a7dfh42948a7fhxy287392817
                    name:
                      type: string
                      example: group2
                      description: string
                    folders:
                      type: array
                      example: [{ "id": "things" }, { "id": "anotherthings" }]
                    description:
                      type: string
                      example: blablabla
                    imageCover:
                      type: string
                      example: image.link@somewhere
        404:
          description: failed to load request.
        403:
          description: FAIL

    post:
      description: Creates a new group in the database
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                imageCover:
                  type: string
                  format: binary

      responses:
        201:
          description: New Group Created Successfuly!
  /group/{GroupName}:
    delete:
      description: Deletes all or a specifice group
      parameters:
        - name: GroupName
          required: true
          in: path
          schema:
            type: string
      responses:
        204:
          description: Success
        500:
          description: you are unAuthorized to perform this action
        401:
          description: you are not logged in, please log in to perform this action
        404:
          description: group name is wrong or not found
    get:
      description: Get one group
      parameters:
        - name: GroupName
          required: true
          in: path
          description: write the name of the group you are searching for
          schema:
            type: string

      responses:
        200:
          description: Successful pull of groups info.
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: string
                      example: a7dfh42948a7fhxy287392817
                    name:
                      type: string
                      example: group2
                      description: string
                    folders:
                      type: array
                      example: [{ "id": "things" }, { "id": "anotherthings" }]
                    description:
                      type: string
                      example: blablabla
                    imageCover:
                      type: string
                      example: image.link@somewhere
        404:
          description: failed to load request.
        403:
          description: FAIL
  /folders:
    get:
      description: Obtain information about groups

      responses:
        200:
          description: Successful pull of folders info.
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: string
                      example: a7dfh42948a7fhxy287392817
                    name:
                      type: string
                      example: group2
                      description: string
                    folders:
                      type: array
                      example: [{ "id": "things" }, { "id": "anotherthings" }]
                    description:
                      type: string
                      example: blablabla
                    imageCover:
                      type: string
                      example: image.link@somewhere
        404:
          description: failed to load request.
        403:
          description: FAIL
    post:
      description: Creates a new folder in the database
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  example: a7dfh42948a7fhxy287392817
                folderName:
                  type: string
                  example: write your folder name here
                  description: string
                imageCover:
                  type: string
                  items:
                    properties:
                      id:
                        type: string
                        example: l325235j
                rootFolderName:
                  type: string
                  required: ["true", "false"]
                  example: write the parent group name here
                images:
                  type: array
                  items:
                    properties:
                      id:
                        type: string

      responses:
        200:
          description: New Group Created Successfuly!
        404:
          description: You didn't insert any of the required fields.
        500:
          description: internal Error

  /folders/{folderName}:
    get:
      description: Get one folder by name
      parameters:
        - name: FolderName
          required: true
          in: path
          description: kindly write the name of the Folder you are searching for
          schema:
            type: string

      responses:
        200:
          description: Successful pull of folders info.
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: string
                      example: a7dfh42948a7fhxy287392817
                    name:
                      type: string
                      example: group2
                      description: string
                    folders:
                      type: array
                      example: [{ "id": "things" }, { "id": "anotherthings" }]
                    description:
                      type: string
                      example: blablabla
                    imageCover:
                      type: string
                      example: image.link@somewhere
        404:
          description: failed to load request.
        403:
          description: FAIL

components:
  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT # optional, arbitrary value for documentation purposes
# 2) Apply the security globally to all operations
security:
  - bearerAuth: []
